# This file is part of the Sylius package.
# (c) Paweł Jędrzejewski

imports:
    - { resource: "@SyliusCoreBundle/Resources/config/app/config.yml" }
    - { resource: "@SyliusAdminBundle/Resources/config/app/config.yml" }
    - { resource: "@SyliusShopBundle/Resources/config/app/config.yml" }
    - { resource: "@SyliusApiBundle/Resources/config/app/config.yml" }

    - { resource: "parameters.yml" }
    - { resource: "security.yml" }

framework:
    translator: { fallbacks: ["%locale%"] }
    secret: "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: "%kernel.debug%"
    form: true
    csrf_protection: true
    validation: { enable_annotations: true }
    templating: { engines: ["twig"] }
    default_locale: "%locale%"
    trusted_proxies: ~
    session:
        handler_id: ~

doctrine:
    dbal:
        driver: "%database_driver%"
        host: "%database_host%"
        port: "%database_port%"
        dbname: "%database_name%"
        user: "%database_user%"
        password: "%database_password%"
        charset: UTF8

doctrine_migrations:
    dir_name: "%kernel.root_dir%/migrations"
    namespace: Sylius\Migrations
    table_name: sylius_migrations
    name: Sylius Migrations

swiftmailer:
    transport: "%mailer_transport%"
    host: "%mailer_host%"
    username: "%mailer_user%"
    password: "%mailer_password%"

fos_rest:
    view:
        formats:
            json: true
            xml:  true
        empty_content: 204
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json', 'xml'], fallback_format: json, prefer_extension: true }
            - { path: '^/', stop: true }

fos_elastica:
    clients:
        elasticsearch:
            servers:
                - { host: 127.0.0.1, port: 9200 }
    indexes:
        sylius:
            client: elasticsearch
            finder: ~
#            settings:
#                analysis:
#                    analyzer:
#                        sylius_search_analyzer:
#                            type: custom
#                            tokenizer: standard
#                            filter   : [lowercase, asciifolding, synonym]
#                        sylius_index_analyzer:
#                            type: custom
#                            tokenizer: standard
#                            filter   : [lowercase, asciifolding, synonym, sylius_filter]
#                    filter:
#                        sylius_filter:
#                            type: edgeNGram
#                            min_gram: 1
#                            max_gram: 12
#                        synonym:
#                            type: synonym
#                            expand: true
#                            ignore_case: true
#                            synonyms: synonym.txt
            types:
                product:
                    mappings:
                        id: { type: integer}
                        code: { type: string }
                        name: { type: string }
                        description: { type: string }
                        shortDescription: { type: string }
                        slug: { type: string }
                        translations:
                            type: "nested"
                            properties:
                                locale: { type: string }
                                name: { type: string }
                                metaKeywords: { type: string }
                                metaDescription: { type: string }
                        variants:
                            type: "nested"
                            properties:
                                code: { type: string }
                                availableOn: { type: date }
                                availableUntil: { type: date }
                                name: { type: string }
                                onHand: { type: integer }
                                onHold: { type: integer }
                                optionValues:
                                    type: "nested"
                                    properties:
                                        name: { type: string }
                                        value: { type: string }
                        attributes:
                            type: "nested"
                            properties:
                                value: { type: string }
                        channels:
                            type: "nested"
                            properties:
                                code: { type: string }
                        productTaxons:
                            type: "nested"
                            properties:
                                taxon:
                                    type: "object"
                                    properties:
                                        code: { type: string }
                                        name: { type: string }
                                position: { type: integer }
                        mainTaxon:
                            type: "object"
                            properties:
                                code: { type: string }
                                name: { type: string }
                        images:
                            type: "nested"
                            properties:
                                path: { type: string }
                                code: { type: string }
                        enabled: { type: boolean }
                        isSimple: { type: boolean }
                    persistence:
                        driver: orm
                        model: Sylius\Component\Core\Model\Product
                        provider: ~
                        listener: ~
                        finder: ~
                        repository: Sylius\Bundle\GridBundle\Elastica\ProductRepository
